---
# ==========================================
# Startup
# --------
- repo: Shougo/dein.vim
- repo: shougo/context_filetype.vim
  lazy: 1

- repo: christoomey/vim-tmux-navigator
  if: "! (has('win32') || has('win64'))"

# GUI only
- repo: equalsraf/neovim-gui-shim
  if: has('gui_running')

# Vim8 only
- repo: roxma/nvim-yarp
  if: "! has('nvim')"
  depends: vim-hug-neovim-rpc
- repo: roxma/vim-hug-neovim-rpc
  if: "! has('nvim')"

# ==========================================
# UI
# --------
# - repo: dracula/vim
#   hook_add: colorscheme dracula
- repo: liuchengxu/space-vim-theme
  hook_add: colorscheme space_vim_theme

- repo: itchyny/lightline.vim
  hook_add: |
    let g:lightline = {
    \ 'colorscheme': 'wombat',
    \ 'active': {
    \   'left': [ [ 'mode', 'paste' ],
    \             [ 'cocstatus', 'readonly', 'filename', 'modified' ] ]
    \ },
    \ 'component_function': {
    \   'cocstatus': 'coc#status'
    \ },
    \ }
- repo: maximbaz/lightline-ale
  on_source: lightline.vim

# ==========================================
# VCS
# --------
- repo: tpope/vim-fugitive
- repo: mhinz/vim-signify
  on_path: .*

# - repo: airblade/vim-gitgutter
#   on_path: .*

# ==========================================
# Checker & Format
# --------
- repo: w0rp/ale
  hook_add: source $VIM_PATH/config/plugins/ale.vim

- repo: sbdchd/neoformat
  on_cmd: Neoformat
  hook_add: source $VIM_PATH/config/plugins/neoformat.vim

# ==========================================
# Completion
# --------
- repo: honza/vim-snippets
  on_event: InsertCharPre

- repo: neoclide/coc.nvim
  merge: 0
  rev: release
  hook_add: |
    let g:coc_global_extensions = [
      \ 'coc-emmet', 'coc-snippets', 'coc-pairs',
      \ 'coc-yaml', 'coc-json',
      \ 'coc-html', 'coc-css',
      \ 'coc-rls',
      \ 'coc-vetur',
      \ 'coc-pyright',
      \ 'coc-tsserver',
      \ ]
  hook_post_update: |
    exec ":CocUpdate"

# ==========================================
# Editing
# --------
- repo: tpope/vim-surround

- repo: jiangmiao/auto-pairs

- repo: junegunn/limelight.vim
  on_cmd: Limelight

- repo: junegunn/goyo.vim
  depends: limelight.vim
  on_cmd: Goyo

- repo: junegunn/vim-easy-align
  on_cmd: EasyAlign
  on_map: { onvx: <Plug>EasyAlign }

- repo: editorconfig/editorconfig-vim
  on_path: .*

- repo: tpope/vim-commentary
  on_cmd: Commentary
  on_map: { onx: <Plug>Commentary }
  on_path: .*

- repo: itchyny/vim-cursorword
  on_path: .*
  hook_source: |
    augroup user_plugin_cursorword
      autocmd!
      autocmd FileType denite,qf,easygitblame let b:cursorword = 0
      autocmd WinEnter * if &diff | let b:cursorword = 0 | endif
      autocmd InsertEnter * let b:cursorword = 0
      autocmd InsertLeave * let b:cursorword = 1
    augroup END

# ==========================================
# Tools
# --------
- repo: Shougo/defx.nvim
  on_cmd: Defx
  hook_source: source $VIM_PATH/config/plugins/defx.vim
- repo: kristijanhusak/defx-git
  on_source: defx.nvim
- repo: kristijanhusak/defx-icons
  on_source: defx.nvim

- repo: liuchengxu/vim-which-key
  on_cmd: WhichKey

# - { repo: /usr/local/opt/fzf, merge: 0, on_cmd: FZF }
# - repo: junegunn/fzf.vim
#   depends: fzf,
#   merge: 0

- repo: liuchengxu/vim-clap
  hook_post_update: exec ":Clap install-binary!"

- repo: godlygeek/tabular
  on_cmd: Tabularize

# ==========================================
# Langs
# --------
- repo: fatih/vim-go
  on_ft: [go, go.mod]
  hook_add: |
    let g:go_highlight_array_whitespace_error = 0
    let g:go_highlight_chan_whitespace_error = 0
    let g:go_highlight_space_tab_error = 0
    let g:go_highlight_trailing_whitespace_error = 0
    let g:go_highlight_extra_types = 1
    let g:go_highlight_build_constraints = 1
    let g:go_highlight_extra_types = 1
    let g:go_highlight_fields = 1
    let g:go_highlight_format_strings = 1
    let g:go_highlight_functions = 1
    let g:go_highlight_function_calls = 1
    let g:go_highlight_function_parameters = 1
    let g:go_highlight_types = 1
    let g:go_highlight_generate_tags = 1
    let g:go_highlight_operators = 1
    let g:go_highlight_string_spellcheck = 0
    let g:go_highlight_variable_declarations = 0
    let g:go_highlight_variable_assignments = 0
    let g:go_term_enabled = 0
    let g:go_def_mapping_enabled = 0
    let g:go_diagnostics_enabled = 0
    let g:go_doc_popup_window = 1
    let g:go_gopls_enabled = 0
    let g:go_code_completion_enabled = 0
    let g:go_doc_keywordprg_enabled = 0
  hook_post_update: exec ":GoInstallBinaries"

- repo: plasticboy/vim-markdown
  on_ft: markdown
  hook_add: |
    let g:vim_markdown_folding_level = 4
    let g:vim_markdown_folding_style_pythonic = 1
    let g:vim_markdown_frontmatter = 1
    let g:vim_markdown_auto_insert_bullets = 1
    let g:vim_markdown_new_list_item_indent = 0
    let g:vim_markdown_conceal_code_blocks = 0
    let g:vim_markdown_conceal = 0
    let g:vim_markdown_strikethrough = 1
    let g:vim_markdown_edit_url_in = 'vsplit'
    let g:vim_markdown_fenced_languages = [
      \ 'c++=cpp',
      \ 'viml=vim',
      \ 'bash=sh',
      \ 'ini=dosini',
      \ 'js=javascript',
      \ 'json=javascript',
      \ 'jsx=javascriptreact',
      \ 'tsx=typescriptreact',
      \ 'docker=Dockerfile',
      \ 'makefile=make',
      \ 'py=python'
      \ ]
- repo: rhysd/vim-gfm-syntax
  depends: vim-markdown
  on_ft: markdown
  hook_add: |
    let g:gfm_syntax_enable_always = 0
    let g:gfm_syntax_highlight_emoji = 0
    let g:gfm_syntax_enable_filetypes = ['markdown']
- repo: iamcco/markdown-preview.nvim
  on_ft: [markdown, "pandoc.markdown", "rmc"]
  build: sh -c "cd app && yarn install"

- repo: hail2u/vim-css3-syntax
  on_ft: css
- repo: othree/html5.vim
  on_ft: html
  hook_add: |
    let g:html5_event_handler_attributes_complete = 0
    let g:html5_rdfa_attributes_complete = 0
    let g:html5_microdata_attributes_complete = 0
    let g:html5_aria_attributes_complete = 0
- repo: mattn/emmet-vim
  on_event: InsertEnter
  on_ft: [html, css, javascript, javascriptreact, typescript, typescriptreact]
  hook_source: |
    let g:user_emmet_complete_tag = 0
    let g:user_emmet_install_global = 0
    let g:user_emmet_install_command = 0
    let g:user_emmet_mode = 'i'
- repo: pangloss/vim-javascript
  on_ft: [javascript, javascriptreact]
  hook_add: |
    let g:javascript_plugin_jsdoc = 1
    let g:javascript_plugin_flow = 1
- repo: MaxMEllon/vim-jsx-pretty
  on_ft: [javascript, javascriptreact, typescriptreact]
  depends: vim-javascript
  hook_add: let g:vim_jsx_pretty_colorful_config = 1
- repo: posva/vim-vue
  on_ft: vue
- repo: HerringtonDarkholme/yats.vim
  on_ft: [typescript, typescriptreact]

- repo: jeetsukumaran/vim-pythonsense
  on_ft: python
- repo: klen/python-mode
  on_ft: python
  hook_source: |
    let g:pymode_lint_checkers = ['pyflakes', 'pep8', 'mccabe']
    let g:pymode_options = 0
    let g:pymode_rope_completion = 1
    let g:pymode_indent = 1
    let g:pymode_folding = 0
    let g:pymode_options_colorcolumn = 1
    let g:pymode_breakpoint_bind = '<leader>br'
- repo: petobens/poet-v
  on_ft: python
  hook_source: |
    let g:poetv_auto_activate = 1

- repo: rust-lang/rust.vim
  on_ft: rust

- repo: octol/vim-cpp-enhanced-highlight
  on_ft: cpp

- repo: ekalinin/Dockerfile.vim
  on_ft: [Dockerfile, docker-compose]

- repo: hashivim/vim-terraform
  on_ft: terraform
  on_cmd: [Terraform, TerraformFmt]
  hook_add: let g:terraform_fmt_on_save = 1

- repo: cespare/vim-toml
  on_ft: toml
- repo: elzr/vim-json
  on_ft: json

- repo: protocolbuffers/protobuf
  on_ft: proto
